// <auto-generated />
using System;
using System.Collections.Generic;
using APIDataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace APIDataLayer.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20210723160454_initialDB")]
    partial class initialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("APIDataLayer.Models.Channel", b =>
                {
                    b.Property<Guid>("ChannelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("AdminsID")
                        .HasColumnType("uuid[]");

                    b.Property<List<Guid>>("ChannelChatsID")
                        .HasColumnType("uuid[]");

                    b.Property<string>("ChannelUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatorID")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChannelID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("APIDataLayer.Models.ChannelChat", b =>
                {
                    b.Property<Guid>("ChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChannelID")
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<long>("Seens")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SendingTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChatID");

                    b.ToTable("ChannelsChats");
                });

            modelBuilder.Entity("APIDataLayer.Models.Group", b =>
                {
                    b.Property<Guid>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatorID")
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("GroupAdminsID")
                        .HasColumnType("uuid[]");

                    b.Property<List<Guid>>("GroupChatsID")
                        .HasColumnType("uuid[]");

                    b.Property<string>("GroupDescription")
                        .HasColumnType("text");

                    b.Property<List<Guid>>("GroupMembersID")
                        .HasColumnType("uuid[]");

                    b.Property<string>("GroupProfileImage")
                        .HasColumnType("text");

                    b.Property<string>("GroupUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OnlineUsers")
                        .HasColumnType("integer");

                    b.HasKey("GroupID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("APIDataLayer.Models.GroupChat", b =>
                {
                    b.Property<Guid>("ChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("GroupChatStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SendingTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChatID");

                    b.ToTable("GroupsChats");
                });

            modelBuilder.Entity("APIDataLayer.Models.Room", b =>
                {
                    b.Property<Guid>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ReceiverUserID")
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("RoomChatsID")
                        .HasColumnType("uuid[]");

                    b.Property<Guid>("SenderUserID")
                        .HasColumnType("uuid");

                    b.HasKey("RoomID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("APIDataLayer.Models.RoomChat", b =>
                {
                    b.Property<Guid>("ChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<int>("RoomChatStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SendingTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChatID");

                    b.ToTable("RoomsChats");
                });

            modelBuilder.Entity("APIDataLayer.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CurrentConnectionID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<List<Guid>>("UserChannelsID")
                        .HasColumnType("uuid[]");

                    b.Property<List<Guid>>("UserGroupsID")
                        .HasColumnType("uuid[]");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Guid>>("UserRoomsID")
                        .HasColumnType("uuid[]");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
